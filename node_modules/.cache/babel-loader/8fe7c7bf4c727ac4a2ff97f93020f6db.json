{"ast":null,"code":"import _slicedToArray from \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Checkbox.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Checkbox = ({\n  categories\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        checked = _useState2[0],\n        setChecked = _useState2[1];\n\n  const handleToggle = c => () => {\n    //return the first index or -1\n    const currentCategoryId = checked.indexof(c);\n    const newCheckedCategoryId = [...checked]; //if currently checked was not already in checked state > push\n    //else pull/take off\n\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    }\n  };\n\n  return categories.map((c, i) => React.createElement(\"li\", {\n    key: i,\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleToggle(c._id),\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, c.name)));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Checkbox.js"],"names":["React","useState","useEffect","Checkbox","categories","checked","setChecked","handleToggle","c","currentCategoryId","indexof","newCheckedCategoryId","push","splice","map","i","_id","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AAAA,oBACHH,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QAC1BI,OAD0B;AAAA,QACjBC,UADiB;;AAGjC,QAAMC,YAAY,GAAGC,CAAC,IAAI,MAAM;AAC9B;AACA,UAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B;AACA,UAAMG,oBAAoB,GAAG,CAAC,GAAGN,OAAJ,CAA7B,CAH8B,CAI9B;AACA;;AACA,QAAII,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5BE,MAAAA,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B;AACD,KAFD,MAEO;AACLG,MAAAA,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,EAA+C,CAA/C;AACD;AAEF,GAZD;;AAcA,SAAOL,UAAU,CAACU,GAAX,CAAe,CAACN,CAAD,EAAIO,CAAJ,KACpB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAER,YAAY,CAACC,CAAC,CAACQ,GAAH,CAA7B;AAAsC,IAAA,IAAI,EAAC,UAA3C;AAAsD,IAAA,SAAS,EAAC,kBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCR,CAAC,CAACS,IAAvC,CAFF,CADK,CAAP;AAMD,CAvBD;;AAyBA,eAAed,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Checkbox = ({categories}) => {\n  const [checked, setChecked] = useState([]);\n\n  const handleToggle = c => () => {\n    //return the first index or -1\n    const currentCategoryId = checked.indexof(c);\n    const newCheckedCategoryId = [...checked]\n    //if currently checked was not already in checked state > push\n    //else pull/take off\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c)\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1)\n    }\n\n  }\n\n  return categories.map((c, i) => (\n    <li key={i} className=\"list-unstyled\">\n      <input onChange={handleToggle(c._id)} type=\"checkbox\" className=\"form-check-input\" />\n      <label className=\"form-check-label\">{c.name}</label>\n    </li>\n  ));\n};\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}