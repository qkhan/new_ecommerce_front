{"ast":null,"code":"import _slicedToArray from \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from './Layout';\nimport { getProducts } from './apiCore';\n\nconst Home = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        productsBySell = _useState2[0],\n        setProductsBySell = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        productsByArrival = _useState4[0],\n        setProductsByArrival = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const loadProductsBySell = () => {\n    getProducts('sold').then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProductsBySell(data);\n      }\n    });\n  };\n\n  const loadProductsByArrival = () => {\n    getProducts('createdAt').then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProductsByArrival(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadProductsByArrival();\n    loadProductsBySell();\n  }, []);\n  return React.createElement(Layout, {\n    title: \"Home Page\",\n    description: \"Node React E-commerce App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, JSON.stringify(productsByArrival), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), JSON.stringify(productsBySell));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Home.js"],"names":["React","useState","useEffect","Layout","getProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","error","setError","loadProductsBySell","then","data","loadProductsByArrival","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAC2BJ,QAAQ,CAAC,EAAD,CADnC;AAAA;AAAA,QACVK,cADU;AAAA,QACMC,iBADN;;AAAA,qBAEiCN,QAAQ,CAAC,EAAD,CAFzC;AAAA;AAAA,QAEVO,iBAFU;AAAA,QAESC,oBAFT;;AAAA,qBAGSR,QAAQ,CAAC,KAAD,CAHjB;AAAA;AAAA,QAGVS,KAHU;AAAA,QAGHC,QAHG;;AAKjB,QAAMC,kBAAkB,GAAG,MAAM;AAC/BR,IAAAA,WAAW,CAAC,MAAD,CAAX,CAAoBS,IAApB,CAAyBC,IAAI,IAAI;AAC/B,UAAIA,IAAI,CAACJ,KAAT,EAAgB;AACdC,QAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,OAFD,MAEO;AACLH,QAAAA,iBAAiB,CAACO,IAAD,CAAjB;AACD;AACF,KAND;AAOD,GARD;;AAUA,QAAMC,qBAAqB,GAAG,MAAM;AAClCX,IAAAA,WAAW,CAAC,WAAD,CAAX,CAAyBS,IAAzB,CAA8BC,IAAI,IAAI;AACpC,UAAIA,IAAI,CAACJ,KAAT,EAAgB;AACdC,QAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,OAFD,MAEO;AACLD,QAAAA,oBAAoB,CAACK,IAAD,CAApB;AACD;AACF,KAND;AAOD,GARD;;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,qBAAqB;AACrBH,IAAAA,kBAAkB;AACnB,GAHQ,EAGN,EAHM,CAAT;AAMA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,WAAW,EAAC,2BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,CAACC,SAAL,CAAeT,iBAAf,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGQ,IAAI,CAACC,SAAL,CAAeX,cAAf,CAHH,CADF;AAOD,CAtCD;;AAwCA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from './Layout';\nimport { getProducts } from './apiCore'\n\nconst Home = () => {\n  const [productsBySell, setProductsBySell] = useState([])\n  const [productsByArrival, setProductsByArrival] = useState([])\n  const [error, setError] = useState(false)\n\n  const loadProductsBySell = () => {\n    getProducts('sold').then(data => {\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setProductsBySell(data)\n      }\n    })\n  }\n\n  const loadProductsByArrival = () => {\n    getProducts('createdAt').then(data => {\n      if (data.error) {\n        setError(data.error)\n      } else {\n        setProductsByArrival(data)\n      }\n    })\n  }\n\n  useEffect(() => {\n    loadProductsByArrival()\n    loadProductsBySell()\n  }, [])\n\n\n  return (\n    <Layout title=\"Home Page\" description=\"Node React E-commerce App\">\n      {JSON.stringify(productsByArrival)}\n      <hr/>\n      {JSON.stringify(productsBySell)}\n    </Layout>\n  )\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}