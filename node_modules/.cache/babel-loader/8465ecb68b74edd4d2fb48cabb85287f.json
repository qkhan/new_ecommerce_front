{"ast":null,"code":"var _jsxFileName = \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Checkout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from './Layout';\nimport { getProducts, getBraintreeClientToken, processPayment } from './apiCore';\nimport Card from './Card';\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({\n  products\n}) => {\n  const [data, setData] = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        setData({ ...data,\n          error: data.error\n        });\n      } else {\n        setData({ ...data,\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, showDropIn()) : React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Sign into checkout\"));\n  };\n\n  const buy = () => {\n    //send the nonce to your Server\n    console.log(\"Inside Buy Method\");\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      //console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      //console.log(\"send nonce total to process: \", nonce, getTotal(products));\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n    }).catch(error => {\n      console.log('dropin error: ', error);\n      setData({ ...data,\n        error: error.message\n      });\n    });\n  };\n\n  const showDropIn = () => React.createElement(\"div\", {\n    onBlur: () => setData({ ...data,\n      error: \"\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, data.clientToken != null && products.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken\n    },\n    onInstance: instance => data.instance = instance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: buy,\n    className: \"btn btn-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Pay\")) : null);\n\n  const showError = error => React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? \"\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, error);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Total: $\", getTotal()), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Checkout.js"],"names":["React","useState","useEffect","Layout","getProducts","getBraintreeClientToken","processPayment","Card","isAuthenticated","Link","DropIn","Checkout","products","data","setData","success","clientToken","error","instance","address","userId","user","_id","token","getToken","then","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","buy","console","log","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","catch","message","length","authorization","showError","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from './Layout';\nimport {\n    getProducts,\n    getBraintreeClientToken,\n    processPayment\n} from './apiCore'\nimport Card from './Card';\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\n\nconst Checkout = ({products}) => {\n\n  const [data, setData] = useState({\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  })\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n  const token = isAuthenticated() && isAuthenticated().token\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if(data.error) {\n        setData({...data, error: data.error})\n      }\n      else {\n        setData({...data, clientToken: data.clientToken})\n      }\n    })\n  }\n\n  useEffect(() => {\n    getToken(userId, token)\n  }, []);\n\n\n  const getTotal = () => {\n      return products.reduce((currentValue, nextValue) => {\n        return currentValue + nextValue.count * nextValue.price;\n      }, 0);\n  }\n\n  const showCheckout = () => {\n      return isAuthenticated() ? (\n          <div>{showDropIn()}</div>\n        ) : (\n          <Link to=\"/signin\">\n            <button className=\"btn btn-primary\">\n              Sign into checkout\n            </button>\n          </Link>\n      );\n  };\n\n  const buy = () => {\n    //send the nonce to your Server\n\n    console.log(\"Inside Buy Method\");\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod()\n    .then(data => {\n      //console.log(data);\n      nonce = data.nonce;\n      // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      //console.log(\"send nonce total to process: \", nonce, getTotal(products));\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      }\n\n\n\n\n    })\n    .catch(error => {\n      console.log('dropin error: ', error)\n      setData({...data, error: error.message })\n    });\n  };\n\n\n  const showDropIn = () => (\n    <div onBlur={() => setData({ ...data, error: \"\" })}>\n      {data.clientToken != null && products.length > 0 ? (\n        <div>\n          <DropIn options={{\n            authorization: data.clientToken\n          }}\n          onInstance={instance => (data.instance = instance)}\n        />\n        <button onClick={buy} className=\"btn btn-success\">Pay</button>\n        </div>\n      ) : null}\n    </div>\n  );\n\n  const showError = error => (\n    <div\n      className=\"alert alert-danger\"\n      style={{ display: error ? \"\": \"none\" }}\n    >\n    {error}\n    </div>\n  );\n\n\n  return <div>\n    <h2>Total: ${getTotal()}</h2>\n    {showError(data.error)}\n    {showCheckout()}\n  </div>;\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}