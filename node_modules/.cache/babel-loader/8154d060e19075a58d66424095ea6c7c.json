{"ast":null,"code":"export const addItem = (item, next) => {\n  let cart = [];\n\n  if (typeof window != \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n\n    cart.push({ ...item,\n      count: 1\n    }); // remove duplicates\n    // build an Array from new Set and turn it back into array using Array.from\n    // so that later we can re-map it\n    // new set will only allow unique values in it\n    // so pass the ids of each object/product\n    // if the loop tries to add the same value again, it will get ignored\n    // ...with the array of ids we got on when first map() was used\n    // run map() on it again and return the actual product from the cart\n\n    cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n      return cart.find(p => p._id === id);\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    next();\n  }\n};","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/cartHelpers.js"],"names":["addItem","item","next","cart","window","localStorage","getItem","JSON","parse","push","count","Array","from","Set","map","p","_id","id","find","setItem","stringify"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrC,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAI,OAAOC,MAAP,IAAiB,WAArB,EAAkC;AAChC,QAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChCH,MAAAA,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD;;AACDH,IAAAA,IAAI,CAACM,IAAL,CAAW,EACT,GAAGR,IADM;AAETS,MAAAA,KAAK,EAAE;AAFE,KAAX,EAJgC,CAQhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,IAAAA,IAAI,GAAGQ,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQV,IAAI,CAACW,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,GAAhB,CAAR,CAAX,EAA0CF,GAA1C,CAA8CG,EAAE,IAAI;AACzD,aAAOd,IAAI,CAACe,IAAL,CAAUH,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUC,EAAzB,CAAP;AACD,KAFM,CAAP;AAIAZ,IAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAejB,IAAf,CAA7B;AACAD,IAAAA,IAAI;AACL;AACF,CA1BM","sourcesContent":["export const addItem = (item, next) => {\n  let cart = [];\n  if (typeof window != \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.push( {\n      ...item,\n      count: 1\n    });\n    // remove duplicates\n    // build an Array from new Set and turn it back into array using Array.from\n    // so that later we can re-map it\n    // new set will only allow unique values in it\n    // so pass the ids of each object/product\n    // if the loop tries to add the same value again, it will get ignored\n    // ...with the array of ids we got on when first map() was used\n    // run map() on it again and return the actual product from the cart\n\n    cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n      return cart.find(p => p._id === id);\n    });\n\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    next();\n  }\n};\n"]},"metadata":{},"sourceType":"module"}