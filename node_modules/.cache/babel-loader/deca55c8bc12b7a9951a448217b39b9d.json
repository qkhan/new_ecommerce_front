{"ast":null,"code":"import { API } from '../config';\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(\"QAISAR: err\");\n    return err;\n  });\n};\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(\"QAISAR: err\");\n    return err;\n  });\n};\nexport const getCategories = () => {\n  return fetch(`${API}/category`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listOrders = (userId, token) => {\n  return fetch(`${API}/order/list/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(\"listOrders: err\");\n    return err;\n  });\n};\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/order/status-values/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(\"listOrders: err\");\n    return err;\n  });\n};\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    return err => console.log(err);\n  });\n};\n/**\n* to perform crud on product\n* get all products\n* get a single product\n* update single product\n* delete single product\n*/\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    return err => console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/admin/apiAdmin.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","createProduct","product","getCategories","listOrders","getStatusValues","updateOrderStatus","orderId","status","getProducts","deleteProduct","productId"],"mappings":"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","sourcesContent":["import {API} from '../config';\n\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  })\n  .then(response => {\n    return response.json();\n  })\n  .catch(err => {\n    console.log(\"QAISAR: err\");\n    return (err);\n  });\n};\n\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  })\n  .then(response => {\n    return response.json();\n  })\n  .catch(err => {\n    console.log(\"QAISAR: err\");\n    return (err);\n  });\n};\n\nexport const getCategories = () => {\n  return fetch(`${API}/category`, {\n    method: \"GET\"\n  })\n  .then (response => {\n    return response.json();\n  })\n  .catch(err => console.log(err));\n};\n\nexport const listOrders = (userId, token) => {\n  return fetch(`${API}/order/list/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  })\n  .then(response => {\n    return response.json();\n  })\n  .catch(err => {\n    console.log(\"listOrders: err\");\n    return (err);\n  });\n};\n\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/order/status-values/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  })\n  .then(response => {\n    return response.json();\n  })\n  .catch(err => {\n    console.log(\"listOrders: err\");\n    return (err);\n  });\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({status, orderId})\n  })\n  .then(response => {\n    return response.json();\n  })\n  .catch(err => {\n    return (err => console.log(err));\n  });\n};\n\n/**\n* to perform crud on product\n* get all products\n* get a single product\n* update single product\n* delete single product\n*/\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  })\n  .then (response => {\n    return response.json();\n  })\n  .catch(err => console.log(err));\n};\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({status, orderId})\n  })\n  .then(response => {\n    return response.json();\n  })\n  .catch(err => {\n    return (err => console.log(err));\n  });\n};\n"]},"metadata":{},"sourceType":"module"}