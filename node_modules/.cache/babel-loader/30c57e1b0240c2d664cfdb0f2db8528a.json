{"ast":null,"code":"var _jsxFileName = \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Product.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from './Layout';\nimport { getProducts, read, listRelated } from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n  const [product, setProduct] = useState({});\n  const [relatedProduct, setRelatedProduct] = useState({});\n  const [error, setError] = useState(false);\n\n  const loadSingleProduct = productId => {\n    read(productId).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProduct(data); //fetch related products\n\n        listRelated(data._id).then(data => {\n          if (data.error) {\n            setError(data.error);\n          } else {\n            setRelatedProduct(data);\n          }\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const productId = props.match.params.productId;\n    loadSingleProduct(productId);\n  }, []);\n  return React.createElement(Layout, {\n    title: product && product.name,\n    description: product && product.description && product.description.substring(0, 100),\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, product && product.description && React.createElement(Card, {\n    product: product,\n    showViewProductButton: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Product.js"],"names":["React","useState","useEffect","Layout","getProducts","read","listRelated","Card","Product","props","product","setProduct","relatedProduct","setRelatedProduct","error","setError","loadSingleProduct","productId","then","data","_id","match","params","name","description","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,WAA5B,QAA+C,WAA/C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMe,iBAAiB,GAAGC,SAAS,IAAI;AACrCZ,IAAAA,IAAI,CAACY,SAAD,CAAJ,CAAgBC,IAAhB,CAAqBC,IAAI,IAAI;AAC3B,UAAIA,IAAI,CAACL,KAAT,EAAgB;AACdC,QAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACD,OAFD,MAEO;AACLH,QAAAA,UAAU,CAACQ,IAAD,CAAV,CADK,CAEL;;AACAb,QAAAA,WAAW,CAACa,IAAI,CAACC,GAAN,CAAX,CAAsBF,IAAtB,CAA2BC,IAAI,IAAI;AAC/B,cAAIA,IAAI,CAACL,KAAT,EAAgB;AACdC,YAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACD,WAFD,MAEM;AACJD,YAAAA,iBAAiB,CAACM,IAAD,CAAjB;AACD;AACF,SANH;AAOD;AACF,KAdD;AAeD,GAhBD;;AAmBAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAGR,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBL,SAArC;AACAD,IAAAA,iBAAiB,CAACC,SAAD,CAAjB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEP,OAAO,IAAIA,OAAO,CAACa,IAAlC;AACQ,IAAA,WAAW,EACTb,OAAO,IACPA,OAAO,CAACc,WADR,IAEAd,OAAO,CAACc,WAAR,CAAoBC,SAApB,CAA8B,CAA9B,EAAiC,GAAjC,CAJV;AAMQ,IAAA,SAAS,EAAC,iBANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,OAAO,IAAIA,OAAO,CAACc,WAAnB,IAAkC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEd,OAAf;AAAwB,IAAA,qBAAqB,EAAE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,CAPA,CADF;AAaD,CA1CD;;AA4CA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from './Layout';\nimport { getProducts, read, listRelated } from './apiCore'\nimport Card from './Card';\n\n\nconst Product = props => {\n  const [product, setProduct] = useState({});\n  const [relatedProduct, setRelatedProduct] = useState({});\n  const [error, setError] = useState(false);\n\n  const loadSingleProduct = productId => {\n    read(productId).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProduct(data);\n        //fetch related products\n        listRelated(data._id).then(data => {\n            if (data.error) {\n              setError(data.error);\n            }else {\n              setRelatedProduct(data);\n            }\n          });\n      }\n    });\n  }\n\n\n  useEffect(() => {\n    const productId = props.match.params.productId\n    loadSingleProduct(productId)\n  }, [])\n\n  return (\n    <Layout title={product && product.name}\n            description={\n              product &&\n              product.description &&\n              product.description.substring(0, 100)\n            }\n            className=\"container-fluid\">\n    <div className=\"row\">\n      {product && product.description && <Card product={product} showViewProductButton={false}/>}\n    </div>\n    </Layout>\n  );\n};\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}