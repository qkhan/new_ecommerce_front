{"ast":null,"code":"var _jsxFileName = \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/auth/AdminRoute.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\nconst AdminRoute = ({\n  component: Component,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated() && isAuthenticated().user.role === 1 ? React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })) : React.createElement(Redirect, {\n    to: {\n      pathname: \"/signin\",\n      state: {\n        from: props.location\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}));\n\nexport default AdminRoute;","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/auth/AdminRoute.js"],"names":["React","Component","Route","Redirect","isAuthenticated","AdminRoute","component","rest","props","user","role","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEL,SAAZ;AAAuB,KAAGM;AAA1B,CAAD,KACjB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXJ,eAAe,MAAMA,eAAe,GAAGK,IAAlB,CAAuBC,IAAvB,KAAgC,CAArD,GACE,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,GAGE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFG,MAAAA,QAAQ,EAAE,SADR;AAEFC,MAAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAEL,KAAK,CAACM;AAAb;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAkBA,eAAeT,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './index'\n\nconst AdminRoute = ({component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() && isAuthenticated().user.role === 1 ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/signin\",\n            state: {from: props.location}\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default AdminRoute;\n"]},"metadata":{},"sourceType":"module"}