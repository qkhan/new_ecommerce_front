{"ast":null,"code":"var _jsxFileName = \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Card.js\";\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport ShowImage from \"./ShowImage\";\nimport moment from \"moment\";\nimport { addItem } from './cartHelpers';\n\nconst Card = ({\n  product,\n  showViewProductButton = true,\n  showAddToCartButton = true\n}) => {\n  const [redirect, setRedirect] = useState(false);\n\n  const showViewButton = showViewProductButton => {\n    return showViewProductButton && React.createElement(Link, {\n      to: `/product/${product._id}`,\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-primary mt-2 mb-2 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"View Product\"));\n  };\n\n  const addToCart = () => {\n    addItem(product, () => {\n      setRedirect(true);\n    });\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  };\n\n  const showAddtoCart = showAddToCartButton => {\n    return showAddToCartButton && React.createElement(\"button\", {\n      onClick: addToCart,\n      className: \"btn btn-outline-warning mt-2 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Add to Cart\");\n  };\n\n  const showStock = quantity => {\n    return quantity > 0 ? React.createElement(\"span\", {\n      className: \"badge badge-primary badge-pill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"In Stock\") : React.createElement(\"span\", {\n      className: \"badge badge-primary badge-pill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Out of Stock\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, product.name), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, shouldRedirect(redirect), React.createElement(ShowImage, {\n    item: product,\n    url: \"product\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"lead mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, product.description && product.description.substring(0, 100)), React.createElement(\"p\", {\n    className: \"black-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"$\", product.price), React.createElement(\"p\", {\n    className: \"black-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Category: \", product.category && product.category.name), React.createElement(\"p\", {\n    className: \"black-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Added on \", moment(product.createdAt).fromNow()), showStock(product.quantity), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), showViewButton(showViewProductButton), showAddtoCart(showAddToCartButton)));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/core/Card.js"],"names":["React","useState","Link","Redirect","ShowImage","moment","addItem","Card","product","showViewProductButton","showAddToCartButton","redirect","setRedirect","showViewButton","_id","addToCart","shouldRedirect","showAddtoCart","showStock","quantity","name","description","substring","price","category","createdAt","fromNow"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport {Link, Redirect } from 'react-router-dom';\nimport ShowImage from \"./ShowImage\";\nimport moment from \"moment\";\nimport {addItem} from './cartHelpers';\n\nconst Card = ({product, showViewProductButton = true, showAddToCartButton = true }) => {\n  const [redirect, setRedirect] = useState(false);\n  const showViewButton = showViewProductButton => {\n    return (\n      showViewProductButton && (\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\n          <button className=\"btn btn-outline-primary mt-2 mb-2 \">\n            View Product\n          </button>\n        </Link>\n      )\n    );\n  };\n\n  const addToCart = () => {\n    addItem(product, () => {\n      setRedirect(true)\n    })\n  };\n\n  const shouldRedirect = redirect => {\n    if (redirect) {\n      return <Redirect to='/cart' />\n    }\n  }\n\n  const showAddtoCart = (showAddToCartButton) => {\n    return (\n      showAddToCartButton && (\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\n          Add to Cart\n        </button>\n      )\n    );\n  };\n\n  const showStock = (quantity) => {\n    return quantity > 0 ? (\n      <span className=\"badge badge-primary badge-pill\">In Stock</span>\n    ) : (\n      <span className=\"badge badge-primary badge-pill\">Out of Stock</span>\n    );\n  }\n\n\n\n  return (\n      <div className=\"card\">\n        <div className=\"card-header name\">{product.name}</div>\n        <div className=\"card-body\">\n          {shouldRedirect(redirect)}\n          <ShowImage item={product} url=\"product\" />\n\n          <p className=\"lead mt-2\">\n            { product.description &&  product.description.substring(0, 100)}\n          </p>\n          <p className=\"black-10\">${product.price}</p>\n          <p className=\"black-9\">\n            Category: { product.category && product.category.name }\n          </p>\n          <p className=\"black-8\">\n            Added on {moment(product.createdAt).fromNow()}\n          </p>\n          { showStock(product.quantity)}\n          <br/>\n          {showViewButton(showViewProductButton)}\n          {showAddtoCart(showAddToCartButton)}\n\n        </div>\n      </div>\n  )\n};\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}