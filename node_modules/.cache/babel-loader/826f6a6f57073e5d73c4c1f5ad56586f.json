{"ast":null,"code":"var _jsxFileName = \"/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/user/Profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from '../auth';\nimport { Link } from \"react-router-dom\";\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({\n  match\n}) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false\n  });\n  const {\n    token\n  } = isAuthenticated();\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values;\n\n  const init = userId => {\n    console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: true\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          email: data.email\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId);\n  }, []);\n\n  const profileUpdate = (name, email, password) => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    onChange: handleChange('name'),\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: handleChange('password'),\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Submit\"));\n\n  return React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"update your profile\",\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Profile Update\"), JSON.stringify(values), profileUpdate(name, email, password));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/qaisar/Desktop/React_Ecommerce/ecommerce_front/src/user/Profile.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Link","read","update","updateUser","Profile","match","values","setValues","name","email","password","error","success","token","init","userId","console","log","then","data","params","profileUpdate","handleChange","clickSubmit","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from '../auth';\nimport { Link } from \"react-router-dom\";\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({match}) => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error: false,\n    success: false\n  })\n\n  const {token} = isAuthenticated()\n  const { name, email, password, error, success } = values\n\n  const init = userId => {\n    console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues({...values, error: true})\n      }\n      else {\n        setValues({...values, name: data.name, email: data.email})\n      }\n    })\n  }\n\n  useEffect(() => {\n    init(match.params.userId)\n  }, [])\n\n  const profileUpdate = (name, email, password) => (\n    <form>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Name</label>\n        <input\n          onChange={handleChange('name')}\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Password</label>\n        <input\n          onChange={handleChange('password')}\n          type=\"password\"\n          className=\"form-control\"\n          value={password}\n        />\n      </div>\n\n      <button onClick={clickSubmit} className=\"btn btn-primary\">Submit</button>\n    </form>\n  )\n\n\n  return (\n    <Layout title=\"Profile\"\n            description=\"update your profile\"\n            className=\"container-fluid\"\n    >\n    <h2 className=\"mb-4\">Profile Update</h2>\n    {JSON.stringify(values)}\n    {profileUpdate(name, email, password)}\n\n    </Layout>\n  )\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}